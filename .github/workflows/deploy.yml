name: Deploy to Hetzner

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "🚀 DEPLOYING WITH NODE.JS INSTALLED"
          echo "User: $(whoami)"
          echo "Home: $HOME"
          echo "PWD: $(pwd)"
          echo "OS: $(uname -a)"
          
          echo "📦 Checking prerequisites..."
          which node && node --version || echo "❌ Node.js not found"
          which npm && npm --version || echo "❌ npm not found"
          which git && git --version || echo "❌ git not found"
          which pm2 && pm2 --version || echo "❌ pm2 not found"
          
          echo "🔍 Finding project directory..."
          
          # Check common locations for the project
          if [ -d "/root/tahoe-night-nurse" ]; then
            PROJECT_DIR="/root/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "/home/$USER/tahoe-night-nurse" ]; then
            PROJECT_DIR="/home/$USER/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "/var/www/tahoe-night-nurse" ]; then
            PROJECT_DIR="/var/www/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "~/tahoe-night-nurse" ]; then
            PROJECT_DIR="~/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          else
            echo "❌ Project directory not found. Creating new one..."
            PROJECT_DIR="/root/tahoe-night-nurse"
            echo "📥 Cloning repository to: $PROJECT_DIR"
            git clone https://github.com/mom-vibecoder/tahoe-night-nurse.git $PROJECT_DIR
          fi
          
          echo "📁 Using project directory: $PROJECT_DIR"
          cd $PROJECT_DIR || exit 1
          
          echo "📦 Pulling latest changes..."
          git pull origin main || echo "⚠️ Git pull failed"
          
          echo "📦 Installing dependencies..."
          npm install --production || echo "⚠️ npm install failed"
          
          # Set environment variables if they don't exist
          if [ ! -f .env ]; then
            echo "🔧 Creating .env file..."
            echo "PORT=3000" > .env
            echo "NODE_ENV=production" >> .env
            echo "DATABASE_PATH=./data/tahoe-night-nurse.db" >> .env
            echo "BASIC_AUTH_USER=admin" >> .env
            echo "BASIC_AUTH_PASS=changeme123" >> .env
            echo "DOMAIN=https://tahoenightnurse.com" >> .env
          else
            echo "✅ .env file already exists"
          fi
          
          # Ensure data directory exists
          mkdir -p data
          
          echo "🔄 Restarting application..."
          # Show current directory and files
          echo "📁 Current directory: $(pwd)"
          echo "📂 Directory contents:"
          ls -la
          
          # Stop existing process
          pm2 stop tahoe-night-nurse 2>/dev/null || true
          pm2 delete tahoe-night-nurse 2>/dev/null || true
          
          # Start fresh
          echo "🚀 Starting PM2 process from: $(pwd)/server/index.js"
          pm2 start server/index.js --name tahoe-night-nurse
          pm2 save
          
          # Check if SSL is set up (but don't auto-setup to avoid permission issues)
          echo "🔒 Checking SSL setup..."
          if [ ! -f /etc/letsencrypt/live/tahoenightnurse.com/fullchain.pem ]; then
            echo "⚠️ SSL not found. Run setup-ssl.sh manually on server to enable HTTPS"
          else
            echo "✅ SSL certificate exists"
            # Reload nginx to pick up any config changes (if nginx is running)
            if command -v nginx >/dev/null 2>&1; then
              sudo nginx -t && sudo systemctl reload nginx 2>/dev/null || echo "⚠️ Nginx reload failed"
            fi
          fi
          
          echo "✅ Deployment complete!"
          echo "📊 PM2 Status:"
          pm2 status
          echo "📝 Recent logs:"
          pm2 logs tahoe-night-nurse --lines 10 --nostream
          echo "🌐 Site should be available at: https://tahoenightnurse.com"