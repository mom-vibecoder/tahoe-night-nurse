name: Deploy to Hetzner

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "🎯 MINIMAL SSH TEST (updated SSH key)"
          echo "User: $(whoami)"
          echo "Home: $HOME"
          echo "PWD: $(pwd)"
          echo "Date: $(date)"
          echo "✅ SSH connection successful!"
          
          echo "🔍 Finding project directory..."
          
          # Check common locations for the project
          if [ -d "/root/tahoe-night-nurse" ]; then
            PROJECT_DIR="/root/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "/home/$USER/tahoe-night-nurse" ]; then
            PROJECT_DIR="/home/$USER/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "/var/www/tahoe-night-nurse" ]; then
            PROJECT_DIR="/var/www/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          elif [ -d "~/tahoe-night-nurse" ]; then
            PROJECT_DIR="~/tahoe-night-nurse"
            echo "✅ Found project at: $PROJECT_DIR"
          else
            echo "❌ Project directory not found. Creating new one..."
            PROJECT_DIR="/root/tahoe-night-nurse"
            echo "📥 Cloning repository to: $PROJECT_DIR"
            git clone https://github.com/mom-vibecoder/tahoe-night-nurse.git $PROJECT_DIR
          fi
          
          echo "📁 Using project directory: $PROJECT_DIR"
          cd $PROJECT_DIR || exit 1
          
          echo "📦 Pulling latest changes..."
          git pull origin main || echo "⚠️ Git pull failed"
          
          echo "📦 Installing dependencies..."
          npm install --production || echo "⚠️ npm install failed"
          
          # Set environment variables if they don't exist
          if [ ! -f .env ]; then
            echo "🔧 Creating .env file..."
            cat > .env << EOF
          PORT=3000
          NODE_ENV=production
          DATABASE_PATH=./data/tahoe-night-nurse.db
          BASIC_AUTH_USER=admin
          BASIC_AUTH_PASS=changeme123
          MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}
          ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
          FROM_EMAIL=${{ secrets.FROM_EMAIL }}
          DOMAIN=https://tahoenightnurse.com
          EOF
          else
            echo "✅ .env file already exists"
          fi
          
          # Ensure data directory exists
          mkdir -p data
          
          echo "🔄 Restarting application..."
          # Show current directory and files
          echo "📁 Current directory: $(pwd)"
          echo "📂 Directory contents:"
          ls -la
          
          # Stop existing process
          pm2 stop tahoe-night-nurse 2>/dev/null || true
          pm2 delete tahoe-night-nurse 2>/dev/null || true
          
          # Start fresh
          echo "🚀 Starting PM2 process from: $(pwd)/server/index.js"
          pm2 start server/index.js --name tahoe-night-nurse
          pm2 save
          
          echo "✅ Deployment complete!"
          echo "📊 PM2 Status:"
          pm2 status
          echo "📝 Recent logs:"
          pm2 logs tahoe-night-nurse --lines 10 --nostream